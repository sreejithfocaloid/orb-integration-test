version: 2.1

orbs:
  foc-orb-test: sreejithfocaloid/foc-orb-test@0.0.14
parameters:
  image-name:
    description: Image to be scanned.
    type: string
    default: node
  image-namespace:
    description: Namespace of the image.
    type: string
    default: library #Namespace of the image to be scanned eg:node
  image-tag:
    description: Version of the image.
    type: string
    default: latest #Version of the image to be scanned eg:latest
  image-connector:
    description: Connector.
    type: string
    default: dockerhub.public #Connector used by slim to get the image eg:dockerhub.public
  cimg-tag:
    description: Which tag to be used for cimg/base.
    type: string
    default: current #Which tag to be used for cimg eg:  cimg/base:current
jobs:
  scan:
    docker:
      - image: cimg/base:<< pipeline.parameters.cimg-tag >>
    
    steps:
      - checkout
      # Run your orb's commands to validate them.
      - foc-orb-test/xray:
          imageName: << pipeline.parameters.image-name >>
          imageNamespace: << pipeline.parameters.image-namespace >>
          imageTag: << pipeline.parameters.image-tag >>
          imageConnector: << pipeline.parameters.image-connector >>
          cimgTag: << pipeline.parameters.cimg-tag >>
      - store_artifacts:
          path: /tmp/artifact-xray
          destination: xray-json
      - foc-orb-test/vscan:
          imageName: << pipeline.parameters.image-name >>
          imageNamespace: << pipeline.parameters.image-namespace >>
          imageTag: << pipeline.parameters.image-tag >>
          imageConnector: << pipeline.parameters.image-connector >>
          cimgTag: << pipeline.parameters.cimg-tag >>
      - store_artifacts:
          path: /tmp/artifact-vscan
          destination: vscan-json
workflows:
  engine-execution:
    jobs:
      # Make sure to include "filters: *filters" in every test job you want to run as part of your deployment.
      - scan